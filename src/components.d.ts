/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IBreadcrumbs,
} from './components/breadcrumbs/breadcrumbs';

export namespace Components {
  interface CAlert {
    /**
    * Animation to use when the alert is dismissed.
    */
    'cssClass': string;
    'header': string;
    'type': string;
  }
  interface CBadge {
    'cssClass': string;
    'hollow': boolean;
    'type': string;
  }
  interface CBreadcrumbs {
    'breadcrumbs': IBreadcrumbs[];
    'cssClass': string;
  }
  interface CButton {
    'cssClass': string;
    'hollow': boolean;
    'icon': string;
    'iconDirection': string;
    'size': string;
    'type': string;
    'url': string;
  }
  interface CCard {
    'alt': string;
    'cssClass': string;
    'lazy': boolean;
    'src': string;
    'threshold': number;
  }
  interface CCardBody {
    'subTitle': string;
    'title': string;
  }
  interface CCardFooter {}
  interface CImg {
    'alt': string;
    'cssClass': string;
    'lazy': boolean;
    'src': string;
    'threshold': number;
  }
}

declare global {


  interface HTMLCAlertElement extends Components.CAlert, HTMLStencilElement {}
  var HTMLCAlertElement: {
    prototype: HTMLCAlertElement;
    new (): HTMLCAlertElement;
  };

  interface HTMLCBadgeElement extends Components.CBadge, HTMLStencilElement {}
  var HTMLCBadgeElement: {
    prototype: HTMLCBadgeElement;
    new (): HTMLCBadgeElement;
  };

  interface HTMLCBreadcrumbsElement extends Components.CBreadcrumbs, HTMLStencilElement {}
  var HTMLCBreadcrumbsElement: {
    prototype: HTMLCBreadcrumbsElement;
    new (): HTMLCBreadcrumbsElement;
  };

  interface HTMLCButtonElement extends Components.CButton, HTMLStencilElement {}
  var HTMLCButtonElement: {
    prototype: HTMLCButtonElement;
    new (): HTMLCButtonElement;
  };

  interface HTMLCCardElement extends Components.CCard, HTMLStencilElement {}
  var HTMLCCardElement: {
    prototype: HTMLCCardElement;
    new (): HTMLCCardElement;
  };

  interface HTMLCCardBodyElement extends Components.CCardBody, HTMLStencilElement {}
  var HTMLCCardBodyElement: {
    prototype: HTMLCCardBodyElement;
    new (): HTMLCCardBodyElement;
  };

  interface HTMLCCardFooterElement extends Components.CCardFooter, HTMLStencilElement {}
  var HTMLCCardFooterElement: {
    prototype: HTMLCCardFooterElement;
    new (): HTMLCCardFooterElement;
  };

  interface HTMLCImgElement extends Components.CImg, HTMLStencilElement {}
  var HTMLCImgElement: {
    prototype: HTMLCImgElement;
    new (): HTMLCImgElement;
  };
  interface HTMLElementTagNameMap {
    'c-alert': HTMLCAlertElement;
    'c-badge': HTMLCBadgeElement;
    'c-breadcrumbs': HTMLCBreadcrumbsElement;
    'c-button': HTMLCButtonElement;
    'c-card': HTMLCCardElement;
    'c-card-body': HTMLCCardBodyElement;
    'c-card-footer': HTMLCCardFooterElement;
    'c-img': HTMLCImgElement;
  }
}

declare namespace LocalJSX {
  interface CAlert extends JSXBase.HTMLAttributes<HTMLCAlertElement> {
    /**
    * Animation to use when the alert is dismissed.
    */
    'cssClass'?: string;
    'header'?: string;
    'type'?: string;
  }
  interface CBadge extends JSXBase.HTMLAttributes<HTMLCBadgeElement> {
    'cssClass'?: string;
    'hollow'?: boolean;
    'type'?: string;
  }
  interface CBreadcrumbs extends JSXBase.HTMLAttributes<HTMLCBreadcrumbsElement> {
    'breadcrumbs'?: IBreadcrumbs[];
    'cssClass'?: string;
  }
  interface CButton extends JSXBase.HTMLAttributes<HTMLCButtonElement> {
    'cssClass'?: string;
    'hollow'?: boolean;
    'icon'?: string;
    'iconDirection'?: string;
    'size'?: string;
    'type'?: string;
    'url'?: string;
  }
  interface CCard extends JSXBase.HTMLAttributes<HTMLCCardElement> {
    'alt'?: string;
    'cssClass'?: string;
    'lazy'?: boolean;
    'src'?: string;
    'threshold'?: number;
  }
  interface CCardBody extends JSXBase.HTMLAttributes<HTMLCCardBodyElement> {
    'subTitle'?: string;
    'title'?: string;
  }
  interface CCardFooter extends JSXBase.HTMLAttributes<HTMLCCardFooterElement> {}
  interface CImg extends JSXBase.HTMLAttributes<HTMLCImgElement> {
    'alt'?: string;
    'cssClass'?: string;
    'lazy'?: boolean;
    'src'?: string;
    'threshold'?: number;
  }

  interface IntrinsicElements {
    'c-alert': CAlert;
    'c-badge': CBadge;
    'c-breadcrumbs': CBreadcrumbs;
    'c-button': CButton;
    'c-card': CCard;
    'c-card-body': CCardBody;
    'c-card-footer': CCardFooter;
    'c-img': CImg;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


